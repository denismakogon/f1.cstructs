// Generated by jextract

package f1.cstructs.year2021;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class PacketCarStatusData {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            Constants$root.C_SHORT$LAYOUT.withName("m_packetFormat"),
            Constants$root.C_CHAR$LAYOUT.withName("m_gameMajorVersion"),
            Constants$root.C_CHAR$LAYOUT.withName("m_gameMinorVersion"),
            Constants$root.C_CHAR$LAYOUT.withName("m_packetVersion"),
            Constants$root.C_CHAR$LAYOUT.withName("m_packetId"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("m_sessionUID"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_sessionTime"),
            Constants$root.C_INT$LAYOUT.withName("m_frameIdentifier"),
            Constants$root.C_CHAR$LAYOUT.withName("m_playerCarIndex"),
            Constants$root.C_CHAR$LAYOUT.withName("m_secondaryPlayerCarIndex")
        ).withName("m_header"),
        MemoryLayout.sequenceLayout(22, MemoryLayout.structLayout(
            Constants$root.C_CHAR$LAYOUT.withName("m_tractionControl"),
            Constants$root.C_CHAR$LAYOUT.withName("m_antiLockBrakes"),
            Constants$root.C_CHAR$LAYOUT.withName("m_fuelMix"),
            Constants$root.C_CHAR$LAYOUT.withName("m_frontBrakeBias"),
            Constants$root.C_CHAR$LAYOUT.withName("m_pitLimiterStatus"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_fuelInTank"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_fuelCapacity"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_fuelRemainingLaps"),
            Constants$root.C_SHORT$LAYOUT.withName("m_maxRPM"),
            Constants$root.C_SHORT$LAYOUT.withName("m_idleRPM"),
            Constants$root.C_CHAR$LAYOUT.withName("m_maxGears"),
            Constants$root.C_CHAR$LAYOUT.withName("m_drsAllowed"),
            Constants$root.C_SHORT$LAYOUT.withName("m_drsActivationDistance"),
            Constants$root.C_CHAR$LAYOUT.withName("m_actualTyreCompound"),
            Constants$root.C_CHAR$LAYOUT.withName("m_visualTyreCompound"),
            Constants$root.C_CHAR$LAYOUT.withName("m_tyresAgeLaps"),
            Constants$root.C_CHAR$LAYOUT.withName("m_vehicleFiaFlags"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_ersStoreEnergy"),
            Constants$root.C_CHAR$LAYOUT.withName("m_ersDeployMode"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_ersHarvestedThisLapMGUK"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_ersHarvestedThisLapMGUH"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_ersDeployedThisLap"),
            Constants$root.C_CHAR$LAYOUT.withName("m_networkPaused")
        ).withName("CarStatusData")).withName("m_carStatusData")
    ).withName("PacketCarStatusData");
    public static MemoryLayout $LAYOUT() {
        return PacketCarStatusData.$struct$LAYOUT;
    }
    public static MemorySegment m_header$slice(MemorySegment seg) {
        return seg.asSlice(0, 24);
    }
    public static MemorySegment m_carStatusData$slice(MemorySegment seg) {
        return seg.asSlice(24, 1034);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


