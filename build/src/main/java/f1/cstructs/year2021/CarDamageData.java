// Generated by jextract

package f1.cstructs.year2021;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class CarDamageData {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(4, Constants$root.C_FLOAT$LAYOUT).withName("m_tyresWear"),
        MemoryLayout.sequenceLayout(4, Constants$root.C_CHAR$LAYOUT).withName("m_tyresDamage"),
        MemoryLayout.sequenceLayout(4, Constants$root.C_CHAR$LAYOUT).withName("m_brakesDamage"),
        Constants$root.C_CHAR$LAYOUT.withName("m_frontLeftWingDamage"),
        Constants$root.C_CHAR$LAYOUT.withName("m_frontRightWingDamage"),
        Constants$root.C_CHAR$LAYOUT.withName("m_rearWingDamage"),
        Constants$root.C_CHAR$LAYOUT.withName("m_floorDamage"),
        Constants$root.C_CHAR$LAYOUT.withName("m_diffuserDamage"),
        Constants$root.C_CHAR$LAYOUT.withName("m_sidepodDamage"),
        Constants$root.C_CHAR$LAYOUT.withName("m_drsFault"),
        Constants$root.C_CHAR$LAYOUT.withName("m_gearBoxDamage"),
        Constants$root.C_CHAR$LAYOUT.withName("m_engineDamage"),
        Constants$root.C_CHAR$LAYOUT.withName("m_engineMGUHWear"),
        Constants$root.C_CHAR$LAYOUT.withName("m_engineESWear"),
        Constants$root.C_CHAR$LAYOUT.withName("m_engineCEWear"),
        Constants$root.C_CHAR$LAYOUT.withName("m_engineICEWear"),
        Constants$root.C_CHAR$LAYOUT.withName("m_engineMGUKWear"),
        Constants$root.C_CHAR$LAYOUT.withName("m_engineTCWear")
    ).withName("CarDamageData");
    public static MemoryLayout $LAYOUT() {
        return CarDamageData.$struct$LAYOUT;
    }
    public static MemorySegment m_tyresWear$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static MemorySegment m_tyresDamage$slice(MemorySegment seg) {
        return seg.asSlice(16, 4);
    }
    public static MemorySegment m_brakesDamage$slice(MemorySegment seg) {
        return seg.asSlice(20, 4);
    }
    static final VarHandle m_frontLeftWingDamage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_frontLeftWingDamage"));
    public static VarHandle m_frontLeftWingDamage$VH() {
        return CarDamageData.m_frontLeftWingDamage$VH;
    }
    public static byte m_frontLeftWingDamage$get(MemorySegment seg) {
        return (byte)CarDamageData.m_frontLeftWingDamage$VH.get(seg);
    }
    public static void m_frontLeftWingDamage$set( MemorySegment seg, byte x) {
        CarDamageData.m_frontLeftWingDamage$VH.set(seg, x);
    }
    public static byte m_frontLeftWingDamage$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_frontLeftWingDamage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_frontLeftWingDamage$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_frontLeftWingDamage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_frontRightWingDamage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_frontRightWingDamage"));
    public static VarHandle m_frontRightWingDamage$VH() {
        return CarDamageData.m_frontRightWingDamage$VH;
    }
    public static byte m_frontRightWingDamage$get(MemorySegment seg) {
        return (byte)CarDamageData.m_frontRightWingDamage$VH.get(seg);
    }
    public static void m_frontRightWingDamage$set( MemorySegment seg, byte x) {
        CarDamageData.m_frontRightWingDamage$VH.set(seg, x);
    }
    public static byte m_frontRightWingDamage$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_frontRightWingDamage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_frontRightWingDamage$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_frontRightWingDamage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_rearWingDamage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_rearWingDamage"));
    public static VarHandle m_rearWingDamage$VH() {
        return CarDamageData.m_rearWingDamage$VH;
    }
    public static byte m_rearWingDamage$get(MemorySegment seg) {
        return (byte)CarDamageData.m_rearWingDamage$VH.get(seg);
    }
    public static void m_rearWingDamage$set( MemorySegment seg, byte x) {
        CarDamageData.m_rearWingDamage$VH.set(seg, x);
    }
    public static byte m_rearWingDamage$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_rearWingDamage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_rearWingDamage$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_rearWingDamage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_floorDamage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_floorDamage"));
    public static VarHandle m_floorDamage$VH() {
        return CarDamageData.m_floorDamage$VH;
    }
    public static byte m_floorDamage$get(MemorySegment seg) {
        return (byte)CarDamageData.m_floorDamage$VH.get(seg);
    }
    public static void m_floorDamage$set( MemorySegment seg, byte x) {
        CarDamageData.m_floorDamage$VH.set(seg, x);
    }
    public static byte m_floorDamage$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_floorDamage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_floorDamage$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_floorDamage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_diffuserDamage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_diffuserDamage"));
    public static VarHandle m_diffuserDamage$VH() {
        return CarDamageData.m_diffuserDamage$VH;
    }
    public static byte m_diffuserDamage$get(MemorySegment seg) {
        return (byte)CarDamageData.m_diffuserDamage$VH.get(seg);
    }
    public static void m_diffuserDamage$set( MemorySegment seg, byte x) {
        CarDamageData.m_diffuserDamage$VH.set(seg, x);
    }
    public static byte m_diffuserDamage$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_diffuserDamage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_diffuserDamage$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_diffuserDamage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_sidepodDamage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_sidepodDamage"));
    public static VarHandle m_sidepodDamage$VH() {
        return CarDamageData.m_sidepodDamage$VH;
    }
    public static byte m_sidepodDamage$get(MemorySegment seg) {
        return (byte)CarDamageData.m_sidepodDamage$VH.get(seg);
    }
    public static void m_sidepodDamage$set( MemorySegment seg, byte x) {
        CarDamageData.m_sidepodDamage$VH.set(seg, x);
    }
    public static byte m_sidepodDamage$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_sidepodDamage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_sidepodDamage$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_sidepodDamage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_drsFault$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_drsFault"));
    public static VarHandle m_drsFault$VH() {
        return CarDamageData.m_drsFault$VH;
    }
    public static byte m_drsFault$get(MemorySegment seg) {
        return (byte)CarDamageData.m_drsFault$VH.get(seg);
    }
    public static void m_drsFault$set( MemorySegment seg, byte x) {
        CarDamageData.m_drsFault$VH.set(seg, x);
    }
    public static byte m_drsFault$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_drsFault$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_drsFault$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_drsFault$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_gearBoxDamage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_gearBoxDamage"));
    public static VarHandle m_gearBoxDamage$VH() {
        return CarDamageData.m_gearBoxDamage$VH;
    }
    public static byte m_gearBoxDamage$get(MemorySegment seg) {
        return (byte)CarDamageData.m_gearBoxDamage$VH.get(seg);
    }
    public static void m_gearBoxDamage$set( MemorySegment seg, byte x) {
        CarDamageData.m_gearBoxDamage$VH.set(seg, x);
    }
    public static byte m_gearBoxDamage$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_gearBoxDamage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_gearBoxDamage$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_gearBoxDamage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_engineDamage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_engineDamage"));
    public static VarHandle m_engineDamage$VH() {
        return CarDamageData.m_engineDamage$VH;
    }
    public static byte m_engineDamage$get(MemorySegment seg) {
        return (byte)CarDamageData.m_engineDamage$VH.get(seg);
    }
    public static void m_engineDamage$set( MemorySegment seg, byte x) {
        CarDamageData.m_engineDamage$VH.set(seg, x);
    }
    public static byte m_engineDamage$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_engineDamage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_engineDamage$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_engineDamage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_engineMGUHWear$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_engineMGUHWear"));
    public static VarHandle m_engineMGUHWear$VH() {
        return CarDamageData.m_engineMGUHWear$VH;
    }
    public static byte m_engineMGUHWear$get(MemorySegment seg) {
        return (byte)CarDamageData.m_engineMGUHWear$VH.get(seg);
    }
    public static void m_engineMGUHWear$set( MemorySegment seg, byte x) {
        CarDamageData.m_engineMGUHWear$VH.set(seg, x);
    }
    public static byte m_engineMGUHWear$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_engineMGUHWear$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_engineMGUHWear$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_engineMGUHWear$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_engineESWear$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_engineESWear"));
    public static VarHandle m_engineESWear$VH() {
        return CarDamageData.m_engineESWear$VH;
    }
    public static byte m_engineESWear$get(MemorySegment seg) {
        return (byte)CarDamageData.m_engineESWear$VH.get(seg);
    }
    public static void m_engineESWear$set( MemorySegment seg, byte x) {
        CarDamageData.m_engineESWear$VH.set(seg, x);
    }
    public static byte m_engineESWear$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_engineESWear$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_engineESWear$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_engineESWear$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_engineCEWear$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_engineCEWear"));
    public static VarHandle m_engineCEWear$VH() {
        return CarDamageData.m_engineCEWear$VH;
    }
    public static byte m_engineCEWear$get(MemorySegment seg) {
        return (byte)CarDamageData.m_engineCEWear$VH.get(seg);
    }
    public static void m_engineCEWear$set( MemorySegment seg, byte x) {
        CarDamageData.m_engineCEWear$VH.set(seg, x);
    }
    public static byte m_engineCEWear$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_engineCEWear$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_engineCEWear$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_engineCEWear$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_engineICEWear$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_engineICEWear"));
    public static VarHandle m_engineICEWear$VH() {
        return CarDamageData.m_engineICEWear$VH;
    }
    public static byte m_engineICEWear$get(MemorySegment seg) {
        return (byte)CarDamageData.m_engineICEWear$VH.get(seg);
    }
    public static void m_engineICEWear$set( MemorySegment seg, byte x) {
        CarDamageData.m_engineICEWear$VH.set(seg, x);
    }
    public static byte m_engineICEWear$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_engineICEWear$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_engineICEWear$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_engineICEWear$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_engineMGUKWear$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_engineMGUKWear"));
    public static VarHandle m_engineMGUKWear$VH() {
        return CarDamageData.m_engineMGUKWear$VH;
    }
    public static byte m_engineMGUKWear$get(MemorySegment seg) {
        return (byte)CarDamageData.m_engineMGUKWear$VH.get(seg);
    }
    public static void m_engineMGUKWear$set( MemorySegment seg, byte x) {
        CarDamageData.m_engineMGUKWear$VH.set(seg, x);
    }
    public static byte m_engineMGUKWear$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_engineMGUKWear$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_engineMGUKWear$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_engineMGUKWear$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_engineTCWear$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_engineTCWear"));
    public static VarHandle m_engineTCWear$VH() {
        return CarDamageData.m_engineTCWear$VH;
    }
    public static byte m_engineTCWear$get(MemorySegment seg) {
        return (byte)CarDamageData.m_engineTCWear$VH.get(seg);
    }
    public static void m_engineTCWear$set( MemorySegment seg, byte x) {
        CarDamageData.m_engineTCWear$VH.set(seg, x);
    }
    public static byte m_engineTCWear$get(MemorySegment seg, long index) {
        return (byte)CarDamageData.m_engineTCWear$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_engineTCWear$set(MemorySegment seg, long index, byte x) {
        CarDamageData.m_engineTCWear$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


