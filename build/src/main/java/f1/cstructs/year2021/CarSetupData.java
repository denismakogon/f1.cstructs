// Generated by jextract

package f1.cstructs.year2021;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class CarSetupData {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_CHAR$LAYOUT.withName("m_frontWing"),
        Constants$root.C_CHAR$LAYOUT.withName("m_rearWing"),
        Constants$root.C_CHAR$LAYOUT.withName("m_onThrottle"),
        Constants$root.C_CHAR$LAYOUT.withName("m_offThrottle"),
        Constants$root.C_FLOAT$LAYOUT.withName("m_frontCamber"),
        Constants$root.C_FLOAT$LAYOUT.withName("m_rearCamber"),
        Constants$root.C_FLOAT$LAYOUT.withName("m_frontToe"),
        Constants$root.C_FLOAT$LAYOUT.withName("m_rearToe"),
        Constants$root.C_CHAR$LAYOUT.withName("m_frontSuspension"),
        Constants$root.C_CHAR$LAYOUT.withName("m_rearSuspension"),
        Constants$root.C_CHAR$LAYOUT.withName("m_frontAntiRollBar"),
        Constants$root.C_CHAR$LAYOUT.withName("m_rearAntiRollBar"),
        Constants$root.C_CHAR$LAYOUT.withName("m_frontSuspensionHeight"),
        Constants$root.C_CHAR$LAYOUT.withName("m_rearSuspensionHeight"),
        Constants$root.C_CHAR$LAYOUT.withName("m_brakePressure"),
        Constants$root.C_CHAR$LAYOUT.withName("m_brakeBias"),
        Constants$root.C_FLOAT$LAYOUT.withName("m_rearLeftTyrePressure"),
        Constants$root.C_FLOAT$LAYOUT.withName("m_rearRightTyrePressure"),
        Constants$root.C_FLOAT$LAYOUT.withName("m_frontLeftTyrePressure"),
        Constants$root.C_FLOAT$LAYOUT.withName("m_frontRightTyrePressure"),
        Constants$root.C_CHAR$LAYOUT.withName("m_ballast"),
        Constants$root.C_FLOAT$LAYOUT.withName("m_fuelLoad")
    ).withName("CarSetupData");
    public static MemoryLayout $LAYOUT() {
        return CarSetupData.$struct$LAYOUT;
    }
    static final VarHandle m_frontWing$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_frontWing"));
    public static VarHandle m_frontWing$VH() {
        return CarSetupData.m_frontWing$VH;
    }
    public static byte m_frontWing$get(MemorySegment seg) {
        return (byte)CarSetupData.m_frontWing$VH.get(seg);
    }
    public static void m_frontWing$set( MemorySegment seg, byte x) {
        CarSetupData.m_frontWing$VH.set(seg, x);
    }
    public static byte m_frontWing$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_frontWing$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_frontWing$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_frontWing$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_rearWing$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_rearWing"));
    public static VarHandle m_rearWing$VH() {
        return CarSetupData.m_rearWing$VH;
    }
    public static byte m_rearWing$get(MemorySegment seg) {
        return (byte)CarSetupData.m_rearWing$VH.get(seg);
    }
    public static void m_rearWing$set( MemorySegment seg, byte x) {
        CarSetupData.m_rearWing$VH.set(seg, x);
    }
    public static byte m_rearWing$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_rearWing$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_rearWing$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_rearWing$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_onThrottle$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_onThrottle"));
    public static VarHandle m_onThrottle$VH() {
        return CarSetupData.m_onThrottle$VH;
    }
    public static byte m_onThrottle$get(MemorySegment seg) {
        return (byte)CarSetupData.m_onThrottle$VH.get(seg);
    }
    public static void m_onThrottle$set( MemorySegment seg, byte x) {
        CarSetupData.m_onThrottle$VH.set(seg, x);
    }
    public static byte m_onThrottle$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_onThrottle$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_onThrottle$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_onThrottle$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_offThrottle$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_offThrottle"));
    public static VarHandle m_offThrottle$VH() {
        return CarSetupData.m_offThrottle$VH;
    }
    public static byte m_offThrottle$get(MemorySegment seg) {
        return (byte)CarSetupData.m_offThrottle$VH.get(seg);
    }
    public static void m_offThrottle$set( MemorySegment seg, byte x) {
        CarSetupData.m_offThrottle$VH.set(seg, x);
    }
    public static byte m_offThrottle$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_offThrottle$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_offThrottle$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_offThrottle$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_frontCamber$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_frontCamber"));
    public static VarHandle m_frontCamber$VH() {
        return CarSetupData.m_frontCamber$VH;
    }
    public static float m_frontCamber$get(MemorySegment seg) {
        return (float)CarSetupData.m_frontCamber$VH.get(seg);
    }
    public static void m_frontCamber$set( MemorySegment seg, float x) {
        CarSetupData.m_frontCamber$VH.set(seg, x);
    }
    public static float m_frontCamber$get(MemorySegment seg, long index) {
        return (float)CarSetupData.m_frontCamber$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_frontCamber$set(MemorySegment seg, long index, float x) {
        CarSetupData.m_frontCamber$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_rearCamber$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_rearCamber"));
    public static VarHandle m_rearCamber$VH() {
        return CarSetupData.m_rearCamber$VH;
    }
    public static float m_rearCamber$get(MemorySegment seg) {
        return (float)CarSetupData.m_rearCamber$VH.get(seg);
    }
    public static void m_rearCamber$set( MemorySegment seg, float x) {
        CarSetupData.m_rearCamber$VH.set(seg, x);
    }
    public static float m_rearCamber$get(MemorySegment seg, long index) {
        return (float)CarSetupData.m_rearCamber$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_rearCamber$set(MemorySegment seg, long index, float x) {
        CarSetupData.m_rearCamber$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_frontToe$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_frontToe"));
    public static VarHandle m_frontToe$VH() {
        return CarSetupData.m_frontToe$VH;
    }
    public static float m_frontToe$get(MemorySegment seg) {
        return (float)CarSetupData.m_frontToe$VH.get(seg);
    }
    public static void m_frontToe$set( MemorySegment seg, float x) {
        CarSetupData.m_frontToe$VH.set(seg, x);
    }
    public static float m_frontToe$get(MemorySegment seg, long index) {
        return (float)CarSetupData.m_frontToe$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_frontToe$set(MemorySegment seg, long index, float x) {
        CarSetupData.m_frontToe$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_rearToe$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_rearToe"));
    public static VarHandle m_rearToe$VH() {
        return CarSetupData.m_rearToe$VH;
    }
    public static float m_rearToe$get(MemorySegment seg) {
        return (float)CarSetupData.m_rearToe$VH.get(seg);
    }
    public static void m_rearToe$set( MemorySegment seg, float x) {
        CarSetupData.m_rearToe$VH.set(seg, x);
    }
    public static float m_rearToe$get(MemorySegment seg, long index) {
        return (float)CarSetupData.m_rearToe$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_rearToe$set(MemorySegment seg, long index, float x) {
        CarSetupData.m_rearToe$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_frontSuspension$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_frontSuspension"));
    public static VarHandle m_frontSuspension$VH() {
        return CarSetupData.m_frontSuspension$VH;
    }
    public static byte m_frontSuspension$get(MemorySegment seg) {
        return (byte)CarSetupData.m_frontSuspension$VH.get(seg);
    }
    public static void m_frontSuspension$set( MemorySegment seg, byte x) {
        CarSetupData.m_frontSuspension$VH.set(seg, x);
    }
    public static byte m_frontSuspension$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_frontSuspension$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_frontSuspension$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_frontSuspension$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_rearSuspension$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_rearSuspension"));
    public static VarHandle m_rearSuspension$VH() {
        return CarSetupData.m_rearSuspension$VH;
    }
    public static byte m_rearSuspension$get(MemorySegment seg) {
        return (byte)CarSetupData.m_rearSuspension$VH.get(seg);
    }
    public static void m_rearSuspension$set( MemorySegment seg, byte x) {
        CarSetupData.m_rearSuspension$VH.set(seg, x);
    }
    public static byte m_rearSuspension$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_rearSuspension$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_rearSuspension$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_rearSuspension$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_frontAntiRollBar$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_frontAntiRollBar"));
    public static VarHandle m_frontAntiRollBar$VH() {
        return CarSetupData.m_frontAntiRollBar$VH;
    }
    public static byte m_frontAntiRollBar$get(MemorySegment seg) {
        return (byte)CarSetupData.m_frontAntiRollBar$VH.get(seg);
    }
    public static void m_frontAntiRollBar$set( MemorySegment seg, byte x) {
        CarSetupData.m_frontAntiRollBar$VH.set(seg, x);
    }
    public static byte m_frontAntiRollBar$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_frontAntiRollBar$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_frontAntiRollBar$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_frontAntiRollBar$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_rearAntiRollBar$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_rearAntiRollBar"));
    public static VarHandle m_rearAntiRollBar$VH() {
        return CarSetupData.m_rearAntiRollBar$VH;
    }
    public static byte m_rearAntiRollBar$get(MemorySegment seg) {
        return (byte)CarSetupData.m_rearAntiRollBar$VH.get(seg);
    }
    public static void m_rearAntiRollBar$set( MemorySegment seg, byte x) {
        CarSetupData.m_rearAntiRollBar$VH.set(seg, x);
    }
    public static byte m_rearAntiRollBar$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_rearAntiRollBar$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_rearAntiRollBar$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_rearAntiRollBar$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_frontSuspensionHeight$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_frontSuspensionHeight"));
    public static VarHandle m_frontSuspensionHeight$VH() {
        return CarSetupData.m_frontSuspensionHeight$VH;
    }
    public static byte m_frontSuspensionHeight$get(MemorySegment seg) {
        return (byte)CarSetupData.m_frontSuspensionHeight$VH.get(seg);
    }
    public static void m_frontSuspensionHeight$set( MemorySegment seg, byte x) {
        CarSetupData.m_frontSuspensionHeight$VH.set(seg, x);
    }
    public static byte m_frontSuspensionHeight$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_frontSuspensionHeight$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_frontSuspensionHeight$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_frontSuspensionHeight$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_rearSuspensionHeight$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_rearSuspensionHeight"));
    public static VarHandle m_rearSuspensionHeight$VH() {
        return CarSetupData.m_rearSuspensionHeight$VH;
    }
    public static byte m_rearSuspensionHeight$get(MemorySegment seg) {
        return (byte)CarSetupData.m_rearSuspensionHeight$VH.get(seg);
    }
    public static void m_rearSuspensionHeight$set( MemorySegment seg, byte x) {
        CarSetupData.m_rearSuspensionHeight$VH.set(seg, x);
    }
    public static byte m_rearSuspensionHeight$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_rearSuspensionHeight$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_rearSuspensionHeight$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_rearSuspensionHeight$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_brakePressure$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_brakePressure"));
    public static VarHandle m_brakePressure$VH() {
        return CarSetupData.m_brakePressure$VH;
    }
    public static byte m_brakePressure$get(MemorySegment seg) {
        return (byte)CarSetupData.m_brakePressure$VH.get(seg);
    }
    public static void m_brakePressure$set( MemorySegment seg, byte x) {
        CarSetupData.m_brakePressure$VH.set(seg, x);
    }
    public static byte m_brakePressure$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_brakePressure$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_brakePressure$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_brakePressure$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_brakeBias$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_brakeBias"));
    public static VarHandle m_brakeBias$VH() {
        return CarSetupData.m_brakeBias$VH;
    }
    public static byte m_brakeBias$get(MemorySegment seg) {
        return (byte)CarSetupData.m_brakeBias$VH.get(seg);
    }
    public static void m_brakeBias$set( MemorySegment seg, byte x) {
        CarSetupData.m_brakeBias$VH.set(seg, x);
    }
    public static byte m_brakeBias$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_brakeBias$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_brakeBias$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_brakeBias$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_rearLeftTyrePressure$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_rearLeftTyrePressure"));
    public static VarHandle m_rearLeftTyrePressure$VH() {
        return CarSetupData.m_rearLeftTyrePressure$VH;
    }
    public static float m_rearLeftTyrePressure$get(MemorySegment seg) {
        return (float)CarSetupData.m_rearLeftTyrePressure$VH.get(seg);
    }
    public static void m_rearLeftTyrePressure$set( MemorySegment seg, float x) {
        CarSetupData.m_rearLeftTyrePressure$VH.set(seg, x);
    }
    public static float m_rearLeftTyrePressure$get(MemorySegment seg, long index) {
        return (float)CarSetupData.m_rearLeftTyrePressure$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_rearLeftTyrePressure$set(MemorySegment seg, long index, float x) {
        CarSetupData.m_rearLeftTyrePressure$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_rearRightTyrePressure$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_rearRightTyrePressure"));
    public static VarHandle m_rearRightTyrePressure$VH() {
        return CarSetupData.m_rearRightTyrePressure$VH;
    }
    public static float m_rearRightTyrePressure$get(MemorySegment seg) {
        return (float)CarSetupData.m_rearRightTyrePressure$VH.get(seg);
    }
    public static void m_rearRightTyrePressure$set( MemorySegment seg, float x) {
        CarSetupData.m_rearRightTyrePressure$VH.set(seg, x);
    }
    public static float m_rearRightTyrePressure$get(MemorySegment seg, long index) {
        return (float)CarSetupData.m_rearRightTyrePressure$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_rearRightTyrePressure$set(MemorySegment seg, long index, float x) {
        CarSetupData.m_rearRightTyrePressure$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_frontLeftTyrePressure$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_frontLeftTyrePressure"));
    public static VarHandle m_frontLeftTyrePressure$VH() {
        return CarSetupData.m_frontLeftTyrePressure$VH;
    }
    public static float m_frontLeftTyrePressure$get(MemorySegment seg) {
        return (float)CarSetupData.m_frontLeftTyrePressure$VH.get(seg);
    }
    public static void m_frontLeftTyrePressure$set( MemorySegment seg, float x) {
        CarSetupData.m_frontLeftTyrePressure$VH.set(seg, x);
    }
    public static float m_frontLeftTyrePressure$get(MemorySegment seg, long index) {
        return (float)CarSetupData.m_frontLeftTyrePressure$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_frontLeftTyrePressure$set(MemorySegment seg, long index, float x) {
        CarSetupData.m_frontLeftTyrePressure$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_frontRightTyrePressure$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_frontRightTyrePressure"));
    public static VarHandle m_frontRightTyrePressure$VH() {
        return CarSetupData.m_frontRightTyrePressure$VH;
    }
    public static float m_frontRightTyrePressure$get(MemorySegment seg) {
        return (float)CarSetupData.m_frontRightTyrePressure$VH.get(seg);
    }
    public static void m_frontRightTyrePressure$set( MemorySegment seg, float x) {
        CarSetupData.m_frontRightTyrePressure$VH.set(seg, x);
    }
    public static float m_frontRightTyrePressure$get(MemorySegment seg, long index) {
        return (float)CarSetupData.m_frontRightTyrePressure$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_frontRightTyrePressure$set(MemorySegment seg, long index, float x) {
        CarSetupData.m_frontRightTyrePressure$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_ballast$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_ballast"));
    public static VarHandle m_ballast$VH() {
        return CarSetupData.m_ballast$VH;
    }
    public static byte m_ballast$get(MemorySegment seg) {
        return (byte)CarSetupData.m_ballast$VH.get(seg);
    }
    public static void m_ballast$set( MemorySegment seg, byte x) {
        CarSetupData.m_ballast$VH.set(seg, x);
    }
    public static byte m_ballast$get(MemorySegment seg, long index) {
        return (byte)CarSetupData.m_ballast$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_ballast$set(MemorySegment seg, long index, byte x) {
        CarSetupData.m_ballast$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle m_fuelLoad$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_fuelLoad"));
    public static VarHandle m_fuelLoad$VH() {
        return CarSetupData.m_fuelLoad$VH;
    }
    public static float m_fuelLoad$get(MemorySegment seg) {
        return (float)CarSetupData.m_fuelLoad$VH.get(seg);
    }
    public static void m_fuelLoad$set( MemorySegment seg, float x) {
        CarSetupData.m_fuelLoad$VH.set(seg, x);
    }
    public static float m_fuelLoad$get(MemorySegment seg, long index) {
        return (float)CarSetupData.m_fuelLoad$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_fuelLoad$set(MemorySegment seg, long index, float x) {
        CarSetupData.m_fuelLoad$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


