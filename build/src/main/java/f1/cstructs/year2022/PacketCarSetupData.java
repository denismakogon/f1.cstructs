// Generated by jextract

package f1.cstructs.year2022;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class PacketCarSetupData {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            Constants$root.C_SHORT$LAYOUT.withName("m_packetFormat"),
            Constants$root.C_CHAR$LAYOUT.withName("m_gameMajorVersion"),
            Constants$root.C_CHAR$LAYOUT.withName("m_gameMinorVersion"),
            Constants$root.C_CHAR$LAYOUT.withName("m_packetVersion"),
            Constants$root.C_CHAR$LAYOUT.withName("m_packetId"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("m_sessionUID"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_sessionTime"),
            Constants$root.C_INT$LAYOUT.withName("m_frameIdentifier"),
            Constants$root.C_CHAR$LAYOUT.withName("m_playerCarIndex"),
            Constants$root.C_CHAR$LAYOUT.withName("m_secondaryPlayerCarIndex")
        ).withName("m_header"),
        MemoryLayout.sequenceLayout(22, MemoryLayout.structLayout(
            Constants$root.C_CHAR$LAYOUT.withName("m_frontWing"),
            Constants$root.C_CHAR$LAYOUT.withName("m_rearWing"),
            Constants$root.C_CHAR$LAYOUT.withName("m_onThrottle"),
            Constants$root.C_CHAR$LAYOUT.withName("m_offThrottle"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_frontCamber"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_rearCamber"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_frontToe"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_rearToe"),
            Constants$root.C_CHAR$LAYOUT.withName("m_frontSuspension"),
            Constants$root.C_CHAR$LAYOUT.withName("m_rearSuspension"),
            Constants$root.C_CHAR$LAYOUT.withName("m_frontAntiRollBar"),
            Constants$root.C_CHAR$LAYOUT.withName("m_rearAntiRollBar"),
            Constants$root.C_CHAR$LAYOUT.withName("m_frontSuspensionHeight"),
            Constants$root.C_CHAR$LAYOUT.withName("m_rearSuspensionHeight"),
            Constants$root.C_CHAR$LAYOUT.withName("m_brakePressure"),
            Constants$root.C_CHAR$LAYOUT.withName("m_brakeBias"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_rearLeftTyrePressure"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_rearRightTyrePressure"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_frontLeftTyrePressure"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_frontRightTyrePressure"),
            Constants$root.C_CHAR$LAYOUT.withName("m_ballast"),
            Constants$root.C_FLOAT$LAYOUT.withName("m_fuelLoad")
        ).withName("CarSetupData")).withName("m_carSetups")
    ).withName("PacketCarSetupData");
    public static MemoryLayout $LAYOUT() {
        return PacketCarSetupData.$struct$LAYOUT;
    }
    public static MemorySegment m_header$slice(MemorySegment seg) {
        return seg.asSlice(0, 24);
    }
    public static MemorySegment m_carSetups$slice(MemorySegment seg) {
        return seg.asSlice(24, 1078);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


